{"version":3,"sources":["features/transactions/TransactionsConfig.tsx","features/transactions/TransactionsList.tsx"],"names":["TransactionsConfig","currency","useSelector","selectCurrency","dispatch","useDispatch","FormControl","marginTop","FormLabel","Select","onChange","target","changeCurrency","value","name","Object","values","CURRENCIES","map","key","boxProps","TransactionsList","transactions","selectTransactions","transactionsValues","Box","Heading","as","display","size","length","transaction","Transaction","isDeletable"],"mappings":"6OAUaA,EAA4C,WACvD,IAAMC,EAAWC,YAAYC,KACvBC,EAAWC,cAEjB,OACE,kBAACC,EAAA,EAAD,CAAaC,UAAW,CAAC,OAAQ,OAAQ,SACvC,kBAACC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,CACEC,SAAU,YAAuB,IAApBC,EAAmB,EAAnBA,OACXP,EAASQ,YAAeD,EAAOE,SAEjCA,MAAOZ,EAASa,MAEfC,OAAOC,OAAOC,KAAYC,KAAI,gBAAGJ,EAAH,EAAGA,KAAH,OAC7B,4BAAQK,IAAKL,EAAMD,MAAOC,GACvBA,SCzBb,iDASA,IAAMM,EAAW,CAAEb,UAAW,CAAC,OAAQ,OAAQ,SAElCc,EAA0C,WACrD,IAAMC,EAAepB,YAAYqB,KAE3BC,EAAqBT,OAAOC,OAAOM,GAEzC,OACE,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAASC,GAAG,KAAKC,QAAS,CAAC,OAAQ,OAAQ,SAAUC,KAAK,MAA1D,gBAIA,kBAAC,EAAD,MAE+B,IAA9BL,EAAmBM,OAClB,kBAACL,EAAA,EAAD,eAAKlB,UAAU,QAAWa,GAA1B,8BAIAI,EAAmBN,KAAI,SAAAa,GAAW,OAChC,kBAACN,EAAA,EAAD,CAAKN,IAAKY,EAAYjB,KAAMP,UAAU,QACpC,kBAACyB,EAAA,EAAD,eAAaC,aAAW,GAAKF","file":"static/js/5.21c6d067.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormControl, FormLabel, Select } from '@chakra-ui/core';\n\nimport { changeCurrency, selectCurrency } from './transactionsSlice';\n\nimport { CURRENCIES } from './constants';\n\nimport { Currency } from './types';\n\nexport const TransactionsConfig: FunctionComponent<{}> = () => {\n  const currency = useSelector(selectCurrency);\n  const dispatch = useDispatch();\n\n  return (\n    <FormControl marginTop={['1rem', '1rem', '2rem']}>\n      <FormLabel>Currency:</FormLabel>\n      <Select\n        onChange={({ target }): void => {\n          dispatch(changeCurrency(target.value as Currency['name']));\n        }}\n        value={currency.name}\n      >\n        {Object.values(CURRENCIES).map(({ name }) => (\n          <option key={name} value={name}>\n            {name}\n          </option>\n        ))}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Box, Heading } from '@chakra-ui/core';\n\nimport { Transaction } from './Transaction';\nimport { TransactionsConfig } from './TransactionsConfig';\n\nimport { selectTransactions } from './transactionsSlice';\n\nconst boxProps = { marginTop: ['1rem', '1rem', '2rem'] };\n\nexport const TransactionsList: FunctionComponent<{}> = () => {\n  const transactions = useSelector(selectTransactions);\n\n  const transactionsValues = Object.values(transactions);\n\n  return (\n    <Box>\n      <Heading as='h3' display={['none', 'none', 'block']} size='md'>\n        Transactions\n      </Heading>\n\n      <TransactionsConfig />\n\n      {transactionsValues.length === 0 ? (\n        <Box marginTop='2rem' {...boxProps}>\n          No transactions added yet.\n        </Box>\n      ) : (\n        transactionsValues.map(transaction => (\n          <Box key={transaction.name} marginTop='2rem'>\n            <Transaction isDeletable {...transaction} />\n          </Box>\n        ))\n      )}\n    </Box>\n  );\n};\n"],"sourceRoot":""}